name: "Build and cache zomes"
on:
  push: 
    branches: [ main ]
  pull_request: 
    branches: [ main ]

jobs:
  build-and-cache-zomes:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: $
    steps:
      - uses: actions/checkout@v3

        uses: cachix/install-nix-action@v27
        with:
          github_access_token: $
          nix_path: nixpkgs=channel:nixos-24.05

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-ci

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-open-dev

      - name: Install and test
        run: |
          nix develop --no-update-lock-file --accept-flake-config --command bash -c "pnpm i && pnpm t && pnpm -F @holochain-open-dev/linked-devices build"

      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2

      - name: Build debug zomes
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_TOKEN_HOLOCHAIN_OPEN_DEV }}"
        run: |
          cachix watch-exec holochain-open-dev -- nix build --no-update-lock-file --accept-flake-config -L .#linked_devices_integrity
          cachix push holochain-open-dev $(nix path-info --json --accept-flake-config --no-warn-dirty .#linked_devices_integrity | jq -- -r 'keys[0]')

          cachix watch-exec holochain-open-dev -- nix build --no-update-lock-file --accept-flake-config -L .#linked_devices
          cachix push holochain-open-dev $(nix path-info --json --accept-flake-config --no-warn-dirty .#linked_devices | jq -- -r 'keys[0]')

      - name: Pin debug zomes
        if: github.event_name != 'pull_request'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_TOKEN_HOLOCHAIN_OPEN_DEV }}"
        run: |
          cachix pin holochain-open-dev linked_devices_integrity_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#linked_devices_integrity | jq -- -r 'keys[0]')
          cachix pin holochain-open-dev linked_devices_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#linked_devices | jq -- -r 'keys[0]')

      - name: Build release zomes
        if: matrix.os == 'ubuntu-latest'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_TOKEN_HOLOCHAIN_OPEN_DEV }}"
        run: |
          cachix watch-exec holochain-open-dev -- nix build --no-update-lock-file --accept-flake-config -L .#linked_devices_integrity.meta.release
          cachix push holochain-open-dev $(nix path-info --json --accept-flake-config --no-warn-dirty .#linked_devices_integrity.meta.release | jq -- -r 'keys[0]')

          cachix watch-exec holochain-open-dev -- nix build --no-update-lock-file --accept-flake-config -L .#linked_devices.meta.release
          cachix push holochain-open-dev $(nix path-info --json --accept-flake-config --no-warn-dirty .#linked_devices.meta.release | jq -- -r 'keys[0]')

      - name: Pin release zomes
        if: github.event_name != 'pull_request' && matrix.os == 'ubuntu-latest'
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_TOKEN_HOLOCHAIN_OPEN_DEV }}"
        run: |
          cachix pin holochain-open-dev linked_devices_integrity_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#linked_devices_integrity | jq -- -r 'keys[0]')
          cachix pin holochain-open-dev linked_devices_debug $(nix path-info --json --accept-flake-config --no-warn-dirty .#linked_devices | jq -- -r 'keys[0]')

